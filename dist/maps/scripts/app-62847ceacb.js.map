{"version":3,"sources":["scripts/app-62847ceacb.js"],"names":["angular","module","google","load","controller","$scope","$q","$timeout","$interval","Fullscreen","morganFactory","init","loadSources","refreshConfig","all","getSource","getConfig","then","response","sourceList","data","config","key","sourceLoop","displayBlocks","displayScroll","setInterval","lastupdate","sourceResponse","index","display","displayBlock","scrollList","length","displayOrNot","Math","floor","random","scrollItem","horizontalScroll","content","sourceIndex","showTimeout","hideTimeout","posX","posY","pos","top","left","setTimeout","isVisible","$apply","source","refresh","getData","type","getTimeData","getYahooWeatherData","getOpenWeatherData","getRss","currentDate","Date","toLocaleDateString","lang","weekday","year","month","day","getHours","getMinutes","getAnyUrl","url","query","results","channel","location","city","item","condition","temp","code","id","openweatherAppId","locationId","units","sunrise","sunset","setUTCSeconds","sys","name","weather","description","main","showScroll","feed","feeds","Feed","setNumEntries","result","cleanScrolls","entries","entry","title","push","i","splice","fullscreen","showButton","goFullscreen","toggleAll","$stateProvider","$urlRouterProvider","state","templateUrl","otherwise","factory","$http","urlSource","urlConfig","dataFactory","get","run","$templateCache","put"],"mappings":"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","file":"scripts/app-62847ceacb.js","sourcesContent":["angular.module('morgan', ['ui.router', 'FBAngular', 'ngAnimate', 'ngSanitize']);\n\ngoogle.load(\"feeds\", \"1\");\n\nangular.module(\"morgan\").controller(\"morganCtrl\", [\n    \"$scope\",\n    \"$q\",\n    \"$timeout\",\n    \"$interval\",\n    \"Fullscreen\",\n    \"morganFactory\",\n    function($scope, $q, $timeout, $interval, Fullscreen, morganFactory) {\n        \n        $scope.isVisible = false;\n        $scope.fullscreen = false;\n        $scope.showScroll = false;\n        \n        $scope.config = {};\n        $scope.sourceList = [];\n        $scope.scrollList = [];\n        $scope.horizontalScroll = \"\";\n        \n        $scope.showButton = true;\n        \n        function init() {\n            loadSources();\n            refreshConfig();\n        }\n        \n        function loadSources() {\n            $q.all([\n                morganFactory.getSource(),\n                morganFactory.getConfig()\n            ])\n            .then(function (response) {\n                $scope.sourceList = response[0].data;\n                $scope.config = response[1].data;\n                for (key in $scope.sourceList) {\n                    sourceLoop($scope.sourceList[key]);\n                }\n                displayBlocks();\n                displayScroll();\n            });\n        }\n        \n        function refreshConfig() {\n            // Refresh config every hour and reload sources if config.lastupdate has changed\n            setInterval(function() {\n                morganFactory.getConfig()\n                    .then(function (response) {\n                        if (!!response.data.lastupdate && response.data.lastupdate > $scope.config.lastupdate) {\n                            $scope.config = response.data;\n                            morganFactory.getSource()\n                                .then(function (sourceResponse) {\n                                    $scope.sourceList = sourceResponse.data;\n                                        for (key in $scope.sourceList) {\n                                            sourceLoop($scope.sourceList[key]);\n                                        }\n                                        displayBlocks();\n                                        displayScroll();\n                                });\n                        }\n                    });\n            }, 1000*60*60);\n        }\n        \n        function displayBlocks() {\n            for (index in $scope.sourceList) {\n                if ($scope.sourceList[index].display === \"block\") {\n                    displayBlock(index);\n                }\n            }\n        }\n        \n        function displayScroll() {\n            if ($scope.scrollList.length > 0) {\n                // Pick a random element in $scope.scrollList\n                var displayOrNot = Math.floor(Math.random()*2);\n                if (displayOrNot === 0) {\n                    var scrollItem = Math.floor(Math.random()*$scope.scrollList.length);\n                    $scope.horizontalScroll = $scope.scrollList[scrollItem].content;\n                } else {\n                    $scope.horizontalScroll = \"\";\n                }\n            } else {\n                $scope.horizontalScroll = \"\";\n            }\n            setInterval(function() {\n                if ($scope.scrollList.length > 0) {\n                    // Pick a random element in $scope.scrollList\n                    var displayOrNot = Math.floor(Math.random()*2);\n                    if (displayOrNot === 0) {\n                        var scrollItem = Math.floor(Math.random()*$scope.scrollList.length);\n                        $scope.horizontalScroll = $scope.scrollList[scrollItem].content;\n                    } else {\n                        $scope.horizontalScroll = \"\";\n                    }\n                }\n            }, 20*1000);\n        }\n        \n        function displayBlock(sourceIndex) {\n            var showTimeout = Math.floor((Math.random()*20)+5)*1000;\n            var hideTimeout = Math.floor((Math.random()*10)+5)*1000;\n            var posX = Math.floor((Math.random()*60)+20);\n            var posY = Math.floor((Math.random()*60)+20);\n            \n            $scope.sourceList[sourceIndex].pos.top = posX;\n            $scope.sourceList[sourceIndex].pos.left = posY;\n            setTimeout(function() {\n                $scope.sourceList[sourceIndex].isVisible = true;\n                $scope.$apply();\n                setTimeout(function() {\n                    $scope.sourceList[sourceIndex].isVisible = false;\n                    $scope.$apply();\n                    displayBlock(sourceIndex)\n                }, hideTimeout);\n\n            }, showTimeout);\n        }\n        \n        function sourceLoop(source) {\n            if (source.refresh) {\n                getData(source);\n                setInterval(function() {\n                    getData(source);\n                }, source.refresh*1000);\n            } else {\n                getData(source);\n            }\n        }\n        \n        function getData(source) {\n            switch (source.type) {\n                case \"time\":\n                    source.isVisible = false;\n                    source.content = \"\";\n                    source.pos = { top: 0, left: 0 };\n                    getTimeData(source);\n                    break;\n                case \"yahooWeather\":\n                    source.isVisible = false;\n                    source.content = \"meteo\";\n                    source.pos = { top: 0, left: 0 };\n                    getYahooWeatherData(source);\n                    break;\n                case \"openWeather\":\n                    source.isVisible = false;\n                    source.content = \"meteo\";\n                    source.pos = { top: 0, left: 0 };\n                    getOpenWeatherData(source);\n                    break;\n                case \"rss\":\n                    source.isVisible = false;\n                    source.content = \"rss\";\n                    source.pos = { top: 0, left: 0 };\n                    getRss(source);\n                    break;\n            }\n        }\n        \n        function getTimeData(source) {\n            var currentDate = new Date();\n            source.content = currentDate.toLocaleDateString($scope.config.lang, {weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\"}) + \"<br>\" +\n                            (currentDate.getHours()<10?\"0\":\"\") + currentDate.getHours() + \":\" + (currentDate.getMinutes()<10?\"0\":\"\") + currentDate.getMinutes();\n        }\n        \n        function getYahooWeatherData(source) {\n            morganFactory.getAnyUrl(source.url)\n                .then(function(response) {\n                    source.content = response.data.query.results.channel.location.city + \"<br>\" +\n                                    response.data.query.results.channel.item.condition.temp + \" °C\" + \"<br>\" +\n                                    \"<img src=\\\"http://l.yimg.com/a/i/us/we/52/\" + response.data.query.results.channel.item.condition.code + \".gif\\\" alt=\\\"condition\\\">\";\n                                    \n                });\n        }\n        \n        function getOpenWeatherData(source) {\n          if (!!source.id && !!$scope.config.openweatherAppId) {\n              var url = \"http://api.openweathermap.org/data/2.5/weather?id=\" + source.locationId + \"&appId=\" + $scope.config.openweatherAppId;\n              var units = \" °C\";\n              if (!!$scope.config.units) {\n                  url += \"&units=\" + $scope.config.units;\n                  if ($scope.config.units === \"imperial\") {\n                      units = \" °F\";\n                  }\n              }\n              if (!!$scope.config.lang) {\n                  url += \"&lang=\" + $scope.config.lang;\n              }\n              morganFactory.getAnyUrl(url)\n                  .then(function(response) {\n                      var sunrise = new Date();\n                      var sunset = new Date();\n                      sunrise.setUTCSeconds(response.data.sys.sunrise);\n                      sunset.setUTCSeconds(response.data.sys.sunset);\n                      \n                      source.content = response.data.name + \"<br>\" +\n                                        response.data.weather[0].description + \"<br>\" +\n                                        response.data.main.temp + units + \"<br/>\" +\n                                        \"<i class=\\\"owf owf-\" + response.data.weather[0].id + \" owf-3x\\\">\";\n                  });\n            }\n        }\n        \n        function getRss(source) {\n            $scope.showScroll = false;\n            var feed = new google.feeds.Feed(source.url);\n                feed.setNumEntries(10);\n                feed.load(function(result) {\n                    cleanScrolls(source.id);\n                    for (key in result.feed.entries) {\n                        var entry = {};\n                        entry.id = source.id;\n                        entry.content = result.feed.entries[key].title;\n                        $scope.scrollList.push(entry);\n                    }\n                    $scope.showScroll = true;\n                });\n        }\n        \n        function cleanScrolls(id) {\n            for (var i=$scope.scrollList.length-1; i>=0; i--) {\n                if ($scope.scrollList[i].id === id) {\n                    $scope.scrollList.splice(i, 1);\n                }\n            }\n        }\n        \n        $scope.goFullscreen = function () {\n            Fullscreen.toggleAll();\n            $scope.showButton = !$scope.showButton;\n        }\n\n        function showAndHideBlock(element) {\n            var showTimeout = Math.floor((Math.random()*6)+1)*1000;\n            var hideTimeout = Math.floor((Math.random()*6)+1)*1000;\n            var posX = Math.floor((Math.random()*90));\n            var posY = Math.floor((Math.random()*90));\n            \n            element.pos.top = posX;\n            element.pos.left = posY;\n            $timeout(function() {\n                element.isVisible = true;\n                $timeout(function() {\n                    element.isVisible = false;\n                }, showTimeout);\n\n            }, hideTimeout);\n        }\n        \n        init();\n    }\n]);\n\nangular.module('morgan')\n    .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('main', {\n                url: '/',\n                templateUrl: 'app/main/main.html'\n            });\n            \n        $urlRouterProvider.otherwise('/');\n    });\n\nangular.module('morgan')\n    .factory('morganFactory', ['$http', function($http) {\n\n    var urlSource = \"sources.json\";\n    var urlConfig = \"config.json\";\n    var dataFactory = {};\n\n    dataFactory.getSource = function () {\n        return $http.get(urlSource);\n    };\n    \n    dataFactory.getConfig = function () {\n        return $http.get(urlConfig);\n    };\n    \n    dataFactory.getAnyUrl = function(url) {\n        return $http.get(url);\n    };\n\n    return dataFactory;\n}]);\n\nangular.module(\"morgan\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\" id=\\\"mainContainer\\\" data-ng-controller=\\\"morganCtrl\\\" data-fullscreen=\\\"\\\"><button type=\\\"button\\\" data-ng-click=\\\"goFullscreen()\\\" data-ng-if=\\\"showButton\\\">Fullsreen</button><div data-ng-repeat=\\\"source in sourceList\\\"><div class=\\\"component block\\\" data-ng-class=\\\"{visible: source.isVisible, invisible: !source.isVisible}\\\" data-ng-style=\\\"{\\'top\\': source.pos.top + \\'%\\', \\'left\\': source.pos.left + \\'%\\'}\\\" data-ng-bind-html=\\\"source.content\\\"></div></div><div class=\\\"component\\\" data-ng-class=\\\"{\\'marquee\\': showScroll, \\'stopped\\': !showScroll}\\\">{{horizontalScroll}}</div></div>\");}]);"],"sourceRoot":"/source/"}